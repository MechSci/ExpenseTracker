{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yueth\\\\Documents\\\\React\\\\01-starting-setup\\\\src\\\\components\\\\Expenses\\\\ExpenseList.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport Card from \"../UI/Card\";\nimport \"./ExpenseList.css\";\nimport ExpensesFilter from \"../Filter/ExpensesFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpenseList = props => {\n  _s();\n\n  const [year, setYear] = useState(\"2020\");\n\n  const yearChangeHandler = selected => {\n    setYear(selected);\n  };\n\n  const filteredExpenses = props.items.filter(expense => {\n    return expense.date.getFullYear().toString() === year;\n  });\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expenses\",\n    children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n      currYear: year,\n      onYearChange: yearChangeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), filteredExpenses.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No expenses found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 41\n    }, this), filteredExpenses.length > 0 && filteredExpenses.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      expenseTitle: expense.title,\n      expenseAmount: expense.amount,\n      expenseDate: expense.date\n    }, expense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ExpenseList, \"yCSp7yteJ4gwWCBMvRbb4Pxa8Xw=\");\n\n_c = ExpenseList;\nexport default ExpenseList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseList\");","map":{"version":3,"sources":["C:/Users/yueth/Documents/React/01-starting-setup/src/components/Expenses/ExpenseList.js"],"names":["useState","ExpenseItem","Card","ExpensesFilter","ExpenseList","props","year","setYear","yearChangeHandler","selected","filteredExpenses","items","filter","expense","date","getFullYear","toString","length","map","title","amount","id"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAO,mBAAP;AACA,OAAOC,cAAP,MAA2B,0BAA3B;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,MAAD,CAAhC;;AAEA,QAAMQ,iBAAiB,GAAIC,QAAD,IAAc;AACtCF,IAAAA,OAAO,CAACE,QAAD,CAAP;AACD,GAFD;;AAIA,QAAMC,gBAAgB,GAAGL,KAAK,CAACM,KAAN,CAAYC,MAAZ,CAAoBC,OAAD,IAAa;AACvD,WAAOA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,OAA0CV,IAAjD;AACD,GAFwB,CAAzB;AAIA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA,4BACE,QAAC,cAAD;AAAgB,MAAA,QAAQ,EAAEA,IAA1B;AAAgC,MAAA,YAAY,EAAEE;AAA9C;AAAA;AAAA;AAAA;AAAA,YADF,EAEGE,gBAAgB,CAACO,MAAjB,KAA4B,CAA5B,iBAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFpC,EAGGP,gBAAgB,CAACO,MAAjB,GAA0B,CAA1B,IACCP,gBAAgB,CAACQ,GAAjB,CAAsBL,OAAD,iBACnB,QAAC,WAAD;AAEE,MAAA,YAAY,EAAEA,OAAO,CAACM,KAFxB;AAGE,MAAA,aAAa,EAAEN,OAAO,CAACO,MAHzB;AAIE,MAAA,WAAW,EAAEP,OAAO,CAACC;AAJvB,OACOD,OAAO,CAACQ,EADf;AAAA;AAAA;AAAA;AAAA,YADF,CAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CA1BD;;GAAMjB,W;;KAAAA,W;AA4BN,eAAeA,WAAf","sourcesContent":["import { useState } from \"react\";\r\n\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./ExpenseList.css\";\r\nimport ExpensesFilter from \"../Filter/ExpensesFilter\";\r\n\r\nconst ExpenseList = (props) => {\r\n  const [year, setYear] = useState(\"2020\");\r\n\r\n  const yearChangeHandler = (selected) => {\r\n    setYear(selected);\r\n  };\r\n\r\n  const filteredExpenses = props.items.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === year;\r\n  });\r\n\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpensesFilter currYear={year} onYearChange={yearChangeHandler} />\r\n      {filteredExpenses.length === 0 && <p>No expenses found.</p>}\r\n      {filteredExpenses.length > 0 &&\r\n        filteredExpenses.map((expense) => (\r\n          <ExpenseItem\r\n            key={expense.id}\r\n            expenseTitle={expense.title}\r\n            expenseAmount={expense.amount}\r\n            expenseDate={expense.date}\r\n          />\r\n        ))}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ExpenseList;\r\n"]},"metadata":{},"sourceType":"module"}